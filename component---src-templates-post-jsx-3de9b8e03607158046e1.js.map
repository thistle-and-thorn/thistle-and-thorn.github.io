{"version":3,"sources":["webpack:///./src/components/UserInfo/UserInfo.jsx","webpack:///./src/components/Disqus/Disqus.jsx","webpack:///./src/components/SocialLinks/SocialLinks.jsx","webpack:///./src/templates/post.jsx","webpack:///./src/lib/dates.js","webpack:///./data/SiteConfig.js","webpack:///./src/layout/index.jsx","webpack:///./src/components/PostTags/PostTags.jsx","webpack:///./src/components/SEO/SEO.jsx"],"names":["UserInfo","render","userTwitter","this","props","config","expanded","react_default","a","createElement","dist","username","options","count","Component","Disqus","_this","_Component","call","state","toasts","notifyAboutComment","bind","assertThisInitialized_default","onSnackbarDismiss","slice","setState","push","text","postNode","disqusShortname","post","frontmatter","url","urljoin","siteUrl","pathPrefix","fields","slug","main_default","shortname","identifier","title","category_id","onNewComment","SocialLinks","_this$props","postPath","mobile","iconSize","renderShareCount","className","filter","RedditShareButton","RedditIcon","round","size","RedditShareCount","TwitterShareButton","TwitterIcon","FacebookShareButton","quote","excerpt","FacebookIcon","FacebookShareCount","LinkedinShareButton","description","LinkedinIcon","LinkedinShareCount","TelegramShareButton","TelegramIcon","PostTemplate","iso8601","data","pageContext","markdownRemark","id","postDefaultCategoryID","layout","Helmet_default","siteTitle","SEO","postSEO","gatsby_browser_entry","to","date","Date","toLocaleDateString","dangerouslySetInnerHTML","__html","html","PostTags","tags","components_SocialLinks_SocialLinks","components_UserInfo_UserInfo","components_Disqus_Disqus","React","pageQuery","siteTitleShort","siteTitleAlt","siteLogo","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","dateFromFormat","dateFormat","userName","userEmail","userLocation","userAvatar","userDescription","userLinks","copyright","themeColor","backgroundColor","replace","substr","module","exports","MainLayout","children","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","name","content","react__WEBPACK_IMPORTED_MODULE_2___default","map","tag","gatsby__WEBPACK_IMPORTED_MODULE_3__","key","style","marginRight","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_1___default","image","postURL","postMeta","cover","blogURL","schemaOrgJSONLD","@context","@type","alternateName","itemListElement","position","item","@id","headline","type","JSON","stringify","property"],"mappings":"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","file":"component---src-templates-post-jsx-3de9b8e03607158046e1.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Follow } from \"react-twitter-widgets\";\n\nclass UserInfo extends Component {\n  render() {\n    const { userTwitter } = this.props.config;\n    const { expanded } = this.props;\n    return (\n      <Follow\n        username={userTwitter}\n        options={{ count: expanded ? true : \"none\" }}\n      />\n    );\n  }\n}\n\nexport default UserInfo;\n","import React, { Component } from \"react\";\nimport ReactDisqusComments from \"react-disqus-comments\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass Disqus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toasts: []\n    };\n    this.notifyAboutComment = this.notifyAboutComment.bind(this);\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this);\n  }\n\n  onSnackbarDismiss() {\n    const [, ...toasts] = this.state.toasts;\n    this.setState({ toasts });\n  }\n  notifyAboutComment() {\n    const toasts = this.state.toasts.slice();\n    toasts.push({ text: \"New comment available!\" });\n    this.setState({ toasts });\n  }\n  render() {\n    const { postNode } = this.props;\n    if (!config.disqusShortname) {\n      return null;\n    }\n    const post = postNode.frontmatter;\n    const url = urljoin(\n      config.siteUrl,\n      config.pathPrefix,\n      postNode.fields.slug\n    );\n    return (\n      <ReactDisqusComments\n        shortname={config.disqusShortname}\n        identifier={post.title}\n        title={post.title}\n        url={url}\n        category_id={post.category_id}\n        onNewComment={this.notifyAboutComment}\n      />\n    );\n  }\n}\n\nexport default Disqus;\n","import React, { Component } from \"react\";\nimport {\n  FacebookShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  TelegramShareButton,\n  RedditShareButton,\n  FacebookShareCount,\n  LinkedinShareCount,\n  RedditShareCount,\n  FacebookIcon,\n  TwitterIcon,\n  TelegramIcon,\n  LinkedinIcon,\n  RedditIcon\n} from \"react-share\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./SocialLinks.css\";\n\nclass SocialLinks extends Component {\n  render() {\n    const { postNode, postPath, mobile } = this.props;\n    const post = postNode.frontmatter;\n    const url = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    const iconSize = mobile ? 36 : 48;\n    const filter = count => (count > 0 ? count : \"\");\n    const renderShareCount = count => (\n      <div className=\"share-count\">{filter(count)}</div>\n    );\n\n    return (\n      <div className=\"social-links\">\n        <RedditShareButton url={url} title={post.title}>\n          <RedditIcon round size={iconSize} />\n          <RedditShareCount url={url}>\n            {count => renderShareCount(count)}\n          </RedditShareCount>\n        </RedditShareButton>\n        <TwitterShareButton url={url} title={post.title}>\n          <TwitterIcon round size={iconSize} />\n        </TwitterShareButton>\n        <FacebookShareButton url={url} quote={postNode.excerpt}>\n          <FacebookIcon round size={iconSize} />\n          <FacebookShareCount url={url}>\n            {count => renderShareCount(count)}\n          </FacebookShareCount>\n        </FacebookShareButton>\n        <LinkedinShareButton\n          url={url}\n          title={post.title}\n          description={postNode.excerpt}\n        >\n          <LinkedinIcon round size={iconSize} />\n          <LinkedinShareCount url={url}>\n            {count => renderShareCount(count)}\n          </LinkedinShareCount>\n        </LinkedinShareButton>\n        <TelegramShareButton url={url}>\n          <TelegramIcon round size={iconSize} />\n        </TelegramShareButton>\n      </div>\n    );\n  }\n}\n\nexport default SocialLinks;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql, Link } from \"gatsby\";\nimport { localDate } from '../lib/dates';\nimport Layout from \"../layout\";\nimport UserInfo from \"../components/UserInfo/UserInfo\";\nimport Disqus from \"../components/Disqus/Disqus\";\nimport PostTags from \"../components/PostTags/PostTags\";\nimport SocialLinks from \"../components/SocialLinks/SocialLinks\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\nimport \"./b16-tomorrow-dark.css\";\nimport \"./post.css\";\n\nexport default class PostTemplate extends React.Component {\n  render() {\n    const { data, pageContext } = this.props;\n    const { slug } = pageContext;\n    const postNode = data.markdownRemark;\n    const post = postNode.frontmatter;\n    if (!post.id) {\n      post.id = slug;\n    }\n    if (!post.category_id) {\n      post.category_id = config.postDefaultCategoryID;\n    }\n    return (\n      <Layout>\n        <div>\n          <Helmet>\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\n          </Helmet>\n          <SEO postPath={slug} postNode={postNode} postSEO />\n          <div>\n            <h3><Link to=\"/\" className=\"post__root-link\">{config.siteTitle}</Link></h3>\n            <h1>{localDate(post.date)} ~ {post.title}</h1>\n            <div dangerouslySetInnerHTML={{ __html: postNode.html }} />\n            <div className=\"post-meta\">\n              <h3>Tags</h3>\n              <PostTags tags={post.tags} />\n              <SocialLinks postPath={slug} postNode={postNode} />\n            </div>\n            <UserInfo config={config} />\n            <Disqus postNode={postNode} />\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        cover\n        date\n        category\n        tags\n      }\n      fields {\n        slug\n        date\n      }\n    }\n  }\n`;\n","export const localDate = iso8601 => (new Date(iso8601)).toLocaleDateString();\n","const config = {\n  siteTitle: \"Thistle and Thorn Studios\", // Site title.\n  siteTitleShort: \"T&T Studios\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: \"Thistle and Thorn Game Studios\", // Alternative site title for SEO.\n  siteLogo: \"/logos/T&TLogo-1024.png\", // Logo used for SEO and manifest.\n  siteUrl: \"https://thistle-and-thorn.github.io\", // Domain of your website without pathPrefix.\n  pathPrefix: \"/\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\n  siteDescription: \"Thistle and Thorn Game Studios, based in Seattle.\", // Website description used for RSS feeds/meta description tag.\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteFBAppID: \"\", // FB Application ID for using app insights\n  googleAnalyticsID: \"\", // GA tracking ID.\n  disqusShortname: \"\", // Disqus shortname.\n  postDefaultCategoryID: \"Tech\", // Default category for posts.\n  dateFromFormat: \"YYYY-MM-DD\", // Date format used in the frontmatter.\n  dateFormat: \"YYYY/MM/DD\", // Date format for display.\n  userName: \"Advanced User\", // Username to display in the author segment.\n  userEmail: \"AdvancedUser@example.com\", // Email used for RSS feed's author segment\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: \"Seattle, WA\", // User location to display in the author segment.\n  userAvatar: \"\", // User avatar to display in the author segment.\n  userDescription: \"\", // User description to display in the author segment.\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    // {\n    //   label: \"GitHub\",\n    //   url: \"https://github.com/Vagr9K/gatsby-advanced-starter\",\n    //   iconClassName: \"fa fa-github\"\n    // },\n    // {\n    //   label: \"Twitter\",\n    //   url: \"https://twitter.com/Vagr9K\",\n    //   iconClassName: \"fa fa-twitter\"\n    // },\n    // {\n    //   label: \"Email\",\n    //   url: \"mailto:vagr9k@gmail.com\",\n    //   iconClassName: \"fa fa-envelope\"\n    // }\n  ],\n  copyright: \"Copyright © 2019. Thistle and Thorn Studios\", // Copyright string for the footer of the website and RSS feed.\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\n  backgroundColor: \"#e0e0e0\" // Used for setting manifest background color.\n};\n\n// Validate\n\n// Make sure pathPrefix is empty if not needed\nif (config.pathPrefix === \"/\") {\n  config.pathPrefix = \"\";\n} else {\n  // Make sure pathPrefix only contains the first forward slash\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, \"\")}`;\n}\n\n// Make sure siteUrl doesn't have an ending forward slash\nif (config.siteUrl.substr(-1) === \"/\")\n  config.siteUrl = config.siteUrl.slice(0, -1);\n\n// Make sure siteRss has a starting forward slash\nif (config.siteRss && config.siteRss[0] !== \"/\")\n  config.siteRss = `/${config.siteRss}`;\n\nmodule.exports = config;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../data/SiteConfig\";\nimport \"./index.css\";\n\nexport default class MainLayout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <div>\n        <Helmet>\n          <meta name=\"description\" content={config.siteDescription} />\n        </Helmet>\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"post-tag-container\">\n        {tags &&\n          tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ marginRight: 10 }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n              #\n              {tag}\n            </Link>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover;\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n"],"sourceRoot":""}