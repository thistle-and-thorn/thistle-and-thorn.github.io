{"version":3,"sources":["webpack:///./src/templates/tag.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/layout/index.jsx","webpack:///./src/components/Header/RootLink.jsx","webpack:///./src/components/PostListing/PostListing.jsx"],"names":["TagTemplate","render","tag","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_4__","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","config","siteTitle","_components_Header_RootLink__WEBPACK_IMPORTED_MODULE_3__","_components_PostListing_PostListing__WEBPACK_IMPORTED_MODULE_5__","React","Component","pageQuery","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","disqusShortname","postDefaultCategoryID","dateFromFormat","dateFormat","userName","userEmail","userTwitter","userLocation","userAvatar","userDescription","userLinks","copyright","themeColor","backgroundColor","replace","substr","slice","module","exports","MainLayout","children","name","content","gatsby__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_1__","n","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_2__","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_2___default","__webpack_exports__","to","PostListing","getPostList","postList","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","cover","date","excerpt","timeToRead","map","post","dateString","Date","toLocaleDateString","gatsby__WEBPACK_IMPORTED_MODULE_2__","key"],"mappings":"kRAQqBA,4FACnBC,OAAA,WAAS,IACCC,EAAQC,KAAKC,MAAMC,YAAnBH,IACFI,EAAYH,KAAKC,MAAMG,KAAKC,kBAAkBC,MACpD,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAQK,MAAK,oBAAsBd,EAAtB,OAAgCe,IAAOC,YACpDR,EAAAC,EAAAC,cAACO,EAAA,EAAD,MACAT,EAAAC,EAAAC,cAAA,cAAMV,GACNQ,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAad,UAAWA,UAVOe,IAAMC,WAkBlCC,EAAS,wCC1BtB,IAAMN,EAAS,CACbC,UAAW,4BACXM,eAAgB,cAChBC,aAAc,iCACdC,SAAU,0BACVC,QAAS,sCACTC,WAAY,IACZC,gBAAiB,oDACjBC,QAAS,WACTC,YAAa,GACbC,kBAAmB,GACnBC,gBAAiB,GACjBC,sBAAuB,OACvBC,eAAgB,aAChBC,WAAY,aACZC,SAAU,gBACVC,UAAW,2BACXC,YAAa,GACbC,aAAc,cACdC,WAAY,GACZC,gBAAiB,GAEjBC,UAAW,GAiBXC,UAAW,8CACXC,WAAY,UACZC,gBAAiB,WAMO,MAAtB7B,EAAOW,WACTX,EAAOW,WAAa,GAGpBX,EAAOW,WAAP,IAAwBX,EAAOW,WAAWmB,QAAQ,WAAY,IAI9B,MAA9B9B,EAAOU,QAAQqB,QAAQ,KACzB/B,EAAOU,QAAUV,EAAOU,QAAQsB,MAAM,GAAI,IAGxChC,EAAOa,SAAiC,MAAtBb,EAAOa,QAAQ,KACnCb,EAAOa,QAAP,IAAqBb,EAAOa,SAE9BoB,EAAOC,QAAUlC,4ICzDImC,oGACnBnD,OAAA,WAAS,IACCoD,EAAalD,KAAKC,MAAlBiD,SACR,OACE3C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,KACED,EAAAC,EAAAC,cAAA,QAAM0C,KAAK,cAAcC,QAAStC,IAAOY,mBAE1CwB,OAR+BhC,IAAMC,8CCL9C,IAAAkC,EAAAC,EAAA,IAAAC,EAAAD,EAAA,GAAA/C,EAAA+C,EAAAE,EAAAD,GAAAE,EAAAH,EAAA,KAAAI,EAAAJ,EAAAE,EAAAC,GAIeE,EAAA,aACb,OAAOpD,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAC4C,EAAA,KAAD,CAAMO,GAAG,IAAIjD,UAAU,mBAAmBG,IAAOC,2FCDxD8C,4GACJC,YAAA,WACE,IAAMC,EAAW,GAYjB,OAXA/D,KAAKC,MAAME,UAAU6D,QAAQ,SAAAC,GAC3BF,EAASG,KAAK,CACZC,KAAMF,EAASG,KAAKC,OAAOC,KAC3BC,KAAMN,EAASG,KAAKI,YAAYD,KAChCE,MAAOR,EAASG,KAAKI,YAAYC,MACjC5D,MAAOoD,EAASG,KAAKI,YAAY3D,MACjC6D,KAAMT,EAASG,KAAKC,OAAOK,KAC3BC,QAASV,EAASG,KAAKO,QACvBC,WAAYX,EAASG,KAAKQ,eAGvBb,KAETjE,OAAA,WACE,IAAMiE,EAAW/D,KAAK8D,cAEtB,OACEvD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACGsD,EAASc,IAAI,SAACC,GACb,IAAMC,EAAc,IAAIC,KAAKF,EAAKJ,MAAOO,qBAEzC,OACE1E,EAAAC,EAAAC,cAAA,MAAIE,UAAU,6BACZJ,EAAAC,EAAAC,cAACyE,EAAA,KAAD,CAAMtB,GAAIkB,EAAKX,KAAMgB,IAAKL,EAAKjE,OAC5BkE,EADH,MACkBD,EAAKjE,gBA5BbK,IAAMC,YAuCjB0C","file":"component---src-templates-tag-jsx-a701e4d3b5246fc31f41.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport RootLink from \"../components/Header/RootLink\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\n\nexport default class TagTemplate extends React.Component {\n  render() {\n    const { tag } = this.props.pageContext;\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout>\n        <div className=\"tag-container\">\n          <Helmet title={`Posts tagged as \"${tag}\" | ${config.siteTitle}`} />\n          <RootLink />\n          <h1>#{tag}</h1>\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","const config = {\n  siteTitle: \"Thistle and Thorn Studios\", // Site title.\n  siteTitleShort: \"T&T Studios\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: \"Thistle and Thorn Game Studios\", // Alternative site title for SEO.\n  siteLogo: \"/logos/T&TLogo-1024.png\", // Logo used for SEO and manifest.\n  siteUrl: \"https://thistle-and-thorn.github.io\", // Domain of your website without pathPrefix.\n  pathPrefix: \"/\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\n  siteDescription: \"Thistle and Thorn Game Studios, based in Seattle.\", // Website description used for RSS feeds/meta description tag.\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteFBAppID: \"\", // FB Application ID for using app insights\n  googleAnalyticsID: \"\", // GA tracking ID.\n  disqusShortname: \"\", // Disqus shortname.\n  postDefaultCategoryID: \"Tech\", // Default category for posts.\n  dateFromFormat: \"YYYY-MM-DD\", // Date format used in the frontmatter.\n  dateFormat: \"YYYY/MM/DD\", // Date format for display.\n  userName: \"Advanced User\", // Username to display in the author segment.\n  userEmail: \"AdvancedUser@example.com\", // Email used for RSS feed's author segment\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: \"Seattle, WA\", // User location to display in the author segment.\n  userAvatar: \"\", // User avatar to display in the author segment.\n  userDescription: \"\", // User description to display in the author segment.\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    // {\n    //   label: \"GitHub\",\n    //   url: \"https://github.com/Vagr9K/gatsby-advanced-starter\",\n    //   iconClassName: \"fa fa-github\"\n    // },\n    // {\n    //   label: \"Twitter\",\n    //   url: \"https://twitter.com/Vagr9K\",\n    //   iconClassName: \"fa fa-twitter\"\n    // },\n    // {\n    //   label: \"Email\",\n    //   url: \"mailto:vagr9k@gmail.com\",\n    //   iconClassName: \"fa fa-envelope\"\n    // }\n  ],\n  copyright: \"Copyright Â© 2019. Thistle and Thorn Studios\", // Copyright string for the footer of the website and RSS feed.\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\n  backgroundColor: \"#e0e0e0\" // Used for setting manifest background color.\n};\n\n// Validate\n\n// Make sure pathPrefix is empty if not needed\nif (config.pathPrefix === \"/\") {\n  config.pathPrefix = \"\";\n} else {\n  // Make sure pathPrefix only contains the first forward slash\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, \"\")}`;\n}\n\n// Make sure siteUrl doesn't have an ending forward slash\nif (config.siteUrl.substr(-1) === \"/\")\n  config.siteUrl = config.siteUrl.slice(0, -1);\n\n// Make sure siteRss has a starting forward slash\nif (config.siteRss && config.siteRss[0] !== \"/\")\n  config.siteRss = `/${config.siteRss}`;\n\nmodule.exports = config;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../data/SiteConfig\";\nimport \"./index.css\";\n\nexport default class MainLayout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <div>\n        <Helmet>\n          <meta name=\"description\" content={config.siteDescription} />\n        </Helmet>\n        {children}\n      </div>\n    );\n  }\n}\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport config from \"../../../data/SiteConfig\";\n\nexport default () => {\n  return <h3><Link to=\"/\" className=\"post__root-link\">{config.siteTitle}</Link></h3>;\n}\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport './PostListing.css';\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      });\n    });\n    return postList;\n  }\n  render() {\n    const postList = this.getPostList();\n    \n    return (\n      <div>\n        <ul>\n          {postList.map((post) => {\n            const dateString = (new Date(post.date)).toLocaleDateString();\n\n            return (\n              <li className=\"post-listing__list-header\">\n                <Link to={post.path} key={post.title}>\n                  {dateString} ~ {post.title}\n                </Link>\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n"],"sourceRoot":""}